# 
# Python
#

# $ mkvenv myvirtualenv # creates venv under ~/.venv/
# $ venv myvirtualenv   # activates venv
# $ deactivate          # deactivates venv
# $ rmvenv myvirtualenv # removes venv
# $ lsvenv              # lists all venv in $VENV_HOME

export VENV_HOME="$HOME/.venv"
[[ -d $VENV_HOME ]] || mkdir $VENV_HOME

lsvenv() {
  ls -1 $VENV_HOME
}

venv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      if [ -d "$VENV_HOME/$1" ]
        then
          source "$VENV_HOME/$1/bin/activate"
        else
          echo "Virtual environment $1 does not exist"
      fi
  fi
}

mkvenv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      if [ ! -d "$VENV_HOME/$1" ]
        then
          python3 -m venv $VENV_HOME/$1
        else
          echo "Virtual environment $1 already exists"
      fi
  fi
}

rmvenv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      if [ ! -d "$VENV_HOME/$1" ]
        then
          echo "Virtual environment $1 does not exist"
        else
          read response"?Are you sure you want to remove venv $1? [y/N]: "
          case $response in
            [Yy]|[Yy][Ee][Ss])
              echo "Removing venv $1"
              rm -r $VENV_HOME/$1
              ;;
            *)
              echo "Aborting..."
              ;;
          esac
      fi
  fi
}

#
# Typora
#

# $ typora              # opens typora
# $ typora <filename>   # opens file in typora, creates if it does not exist

typora() {
    if [ -z "$1" ]; then
        open -a typora
    elif [ -f "$1" ]; then
        open -a typora $1
    else
        touch $1
        open -a typora $1
    fi
}
